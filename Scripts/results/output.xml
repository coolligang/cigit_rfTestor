<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180420 17:33:43.283" generator="Robot 3.0.2 (Python 2.7.14 on win32)">
<suite source="F:\PycharmProjects\RF_RestTester\Scripts\LangChao.txt" id="s1" name="LangChao">
<test id="s1-t1" name="人脸更新">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>http://${host}/api/v1/face/update</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20180420 17:33:43.390" level="INFO">${url} = http://172.16.31.36:9090/api/v1/face/update</msg>
<status status="PASS" endtime="20180420 17:33:43.390" starttime="20180420 17:33:43.390"></status>
</kw>
<kw name="Get Timestamp" library="RfeLibrary">
<doc>返回毫秒级时间戳 </doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20180420 17:33:43.390" level="INFO">${timestamp} = 1524216823390</msg>
<status status="PASS" endtime="20180420 17:33:43.390" starttime="20180420 17:33:43.390"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>api/v1/face/update${apiKey}${timestamp}</arg>
</arguments>
<assign>
<var>${pre_sign}</var>
</assign>
<msg timestamp="20180420 17:33:43.390" level="INFO">${pre_sign} = api/v1/face/update1285384ddfb057814bad78127bc789be1524216823390</msg>
<status status="PASS" endtime="20180420 17:33:43.390" starttime="20180420 17:33:43.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pre_sign}</arg>
</arguments>
<msg timestamp="20180420 17:33:43.391" level="INFO">api/v1/face/update1285384ddfb057814bad78127bc789be1524216823390</msg>
<status status="PASS" endtime="20180420 17:33:43.391" starttime="20180420 17:33:43.390"></status>
</kw>
<kw name="To MD 5" library="RfeLibrary">
<doc>将传入字符串进行md5加密</doc>
<arguments>
<arg>${pre_sign}</arg>
</arguments>
<assign>
<var>${sign}</var>
</assign>
<msg timestamp="20180420 17:33:43.391" level="INFO">${sign} = c71a0472acf4ae9064d85bb2f3972aaf</msg>
<status status="PASS" endtime="20180420 17:33:43.391" starttime="20180420 17:33:43.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sign}</arg>
</arguments>
<msg timestamp="20180420 17:33:43.391" level="INFO">c71a0472acf4ae9064d85bb2f3972aaf</msg>
<status status="PASS" endtime="20180420 17:33:43.391" starttime="20180420 17:33:43.391"></status>
</kw>
<kw name="To Base 64" library="RfeLibrary">
<doc>将图片转为base64编码</doc>
<arguments>
<arg>../imgs/30000007.jpg</arg>
</arguments>
<assign>
<var>${userImg}</var>
</assign>
<msg timestamp="20180420 17:33:43.392" level="INFO">${userImg} = /9j/4AAQSkZJRgABAQEBXgFeAAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqKyr/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq...</msg>
<status status="PASS" endtime="20180420 17:33:43.392" starttime="20180420 17:33:43.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userImg}</arg>
</arguments>
<msg timestamp="20180420 17:33:43.392" level="INFO"></msg>
<status status="PASS" endtime="20180420 17:33:43.392" starttime="20180420 17:33:43.392"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>A01</arg>
</arguments>
<assign>
<var>${uId}</var>
</assign>
<msg timestamp="20180420 17:33:43.393" level="INFO">${uId} = A01</msg>
<status status="PASS" endtime="20180420 17:33:43.393" starttime="20180420 17:33:43.392"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>水星</arg>
</arguments>
<assign>
<var>${userRegion}</var>
</assign>
<msg timestamp="20180420 17:33:43.393" level="INFO">${userRegion} = 水星</msg>
<status status="PASS" endtime="20180420 17:33:43.393" starttime="20180420 17:33:43.393"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>apiId=${apiId}</arg>
<arg>timestamp=${timestamp}</arg>
<arg>userImg=${userImg}</arg>
<arg>sign=${sign}</arg>
<arg>uId=${uId}</arg>
<arg>userSex=1</arg>
<arg>userRegion=${userRegion}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20180420 17:33:43.394" level="INFO">${body} = {u'apiId': u'BOxALFZsYGw0GNzebQck1xKs', u'timestamp': 1524216823390L, u'userImg': '/9j/4AAQSkZJRgABAQEBXgFeAAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqK...</msg>
<status status="PASS" endtime="20180420 17:33:43.394" starttime="20180420 17:33:43.393"></status>
</kw>
<kw name="Req By Json" library="RfeLibrary">
<doc>通过 Json 的方式发起请求</doc>
<arguments>
<arg>post</arg>
<arg>${url}</arg>
<arg>${body}</arg>
</arguments>
<assign>
<var>${rs}</var>
</assign>
<msg timestamp="20180420 17:33:43.759" level="INFO">${rs} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180420 17:33:43.760" starttime="20180420 17:33:43.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rs.text}</arg>
</arguments>
<msg timestamp="20180420 17:33:43.761" level="INFO">{"reqId":"20180420173342085","stauts":0,"msg":"Success"}</msg>
<status status="PASS" endtime="20180420 17:33:43.762" starttime="20180420 17:33:43.760"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"reqId":"20180420161203400","stauts":0,"msg":"Success"}</arg>
</arguments>
<assign>
<var>${except}</var>
</assign>
<msg timestamp="20180420 17:33:43.763" level="INFO">${except} = {"reqId":"20180420161203400","stauts":0,"msg":"Success"}</msg>
<status status="PASS" endtime="20180420 17:33:43.763" starttime="20180420 17:33:43.762"></status>
</kw>
<kw name="Assert Json" library="RfeLibrary">
<doc>extend:assertDictContainsSubset</doc>
<arguments>
<arg>${except}</arg>
<arg>${rs.text}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20180420 17:33:43.765" starttime="20180420 17:33:43.763"></status>
</kw>
<status status="PASS" endtime="20180420 17:33:43.765" critical="yes" starttime="20180420 17:33:43.389"></status>
</test>
<status status="PASS" endtime="20180420 17:33:43.766" starttime="20180420 17:33:43.284"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="LangChao" pass="1">LangChao</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
